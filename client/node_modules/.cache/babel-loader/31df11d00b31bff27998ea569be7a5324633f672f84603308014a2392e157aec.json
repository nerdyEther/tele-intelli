{"ast":null,"code":"var _jsxFileName = \"/Users/neelansh/PROJECTS/tele_intelli/tele-intelli/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport LoginModal from './components/modals/LoginModal';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { AuthProvider } from './AuthContext'; // Import AuthProvider to manage authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoginModalOpen, setLoginModalOpen] = useState(false); // Control login modal\n\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(LoginModal, {\n          isOpen: isLoginModalOpen,\n          onClose: () => setLoginModalOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLoginModalOpen(true),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xYBv8t6lpDXGR2rAfEqHLQy0pfE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","LandingPage","Dashboard","LoginModal","ProtectedRoute","AuthProvider","jsxDEV","_jsxDEV","App","_s","isLoginModalOpen","setLoginModalOpen","children","className","isOpen","onClose","fileName","_jsxFileName","lineNumber","columnNumber","onClick","path","element","_c","$RefreshReg$"],"sources":["/Users/neelansh/PROJECTS/tele_intelli/tele-intelli/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport LoginModal from './components/modals/LoginModal';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { AuthProvider } from './AuthContext'; // Import AuthProvider to manage authentication\n\nfunction App() {\n  const [isLoginModalOpen, setLoginModalOpen] = useState(false); // Control login modal\n\n  return (\n    <AuthProvider> {/* Wrap the app in AuthProvider to provide auth context */}\n      <Router>\n        <div className=\"App\">\n          {/* Render Login Modal */}\n          <LoginModal isOpen={isLoginModalOpen} onClose={() => setLoginModalOpen(false)} />\n\n          {/* Example button to trigger login modal */}\n          <button onClick={() => setLoginModalOpen(true)}>Login</button>\n\n          {/* Define your routes */}\n          <Routes>\n            {/* Landing page route */}\n            <Route path=\"/\" element={<LandingPage />} />\n\n            {/* Protect the dashboard route */}\n            <Route \n              path=\"/dashboard\" \n              element={\n                <ProtectedRoute>\n                  <Dashboard />\n                </ProtectedRoute>\n              } \n            />\n\n            {/* You can add login and signup routes if needed later */}\n            {/* <Route path=\"/login\" element={<LoginPage />} /> */}\n            {/* <Route path=\"/signup\" element={<SignupPage />} /> */}\n          </Routes>\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,YAAY,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/D,oBACEW,OAAA,CAACF,YAAY;IAAAO,QAAA,GAAC,GAAC,eACbL,OAAA,CAACT,MAAM;MAAAc,QAAA,eACLL,OAAA;QAAKM,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAElBL,OAAA,CAACJ,UAAU;UAACW,MAAM,EAAEJ,gBAAiB;UAACK,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAAC,KAAK;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGjFZ,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAAC,IAAI,CAAE;UAAAC,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAG9DZ,OAAA,CAACP,MAAM;UAAAY,QAAA,gBAELL,OAAA,CAACR,KAAK;YAACsB,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEf,OAAA,CAACN,WAAW;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAG5CZ,OAAA,CAACR,KAAK;YACJsB,IAAI,EAAC,YAAY;YACjBC,OAAO,eACLf,OAAA,CAACH,cAAc;cAAAQ,QAAA,eACbL,OAAA,CAACL,SAAS;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UACjB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB;AAACV,EAAA,CApCQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}