{"ast":null,"code":"var _jsxFileName = \"/Users/neelansh/PROJECTS/tele_intelli/tele-intelli/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\nimport KeywordChart from './KeywordChart';\nimport Layout from './Layout'; // Import the Layout component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [groups, setGroups] = useState([]);\n  const [groupDetails, setGroupDetails] = useState(null);\n  const [loadingGroups, setLoadingGroups] = useState(true);\n  const [loadingDetails, setLoadingDetails] = useState(false);\n  const [keywordData, setKeywordData] = useState([]);\n  const [userCountData, setUserCountData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newKeyword, setNewKeyword] = useState('');\n  const [removeModalOpen, setRemoveModalOpen] = useState(false);\n  const [keywordsToRemove, setKeywordsToRemove] = useState([]); // List of keywords\n  const [selectedKeyword, setSelectedKeyword] = useState('');\n  const [totalMessages, setTotalMessages] = useState(0);\n  const memoizedGroups = useMemo(() => groups, [groups]);\n  useEffect(() => {\n    const fetchTotalMessages = async () => {\n      if (!selectedGroup || !user) {\n        return;\n      }\n      console.log(\"Fetching total messages for groupId:\", selectedGroup.group_id, \"and userId:\", user.id); // Log the values\n\n      try {\n        const response = await axios.get('http://localhost:7777/totalMessages', {\n          params: {\n            groupId: selectedGroup.group_id,\n            userId: user.id\n          }\n        });\n        console.log(\"Total messages response:\", response.data); // Log the response\n        setTotalMessages(response.data.totalMessages);\n      } catch (error) {\n        console.error(\"Error fetching total messages:\", error);\n      }\n    };\n    fetchTotalMessages();\n  }, [selectedGroup, user]);\n\n  // Fetch user's groups\n  useEffect(() => {\n    const fetchGroups = async () => {\n      if (!user || !user.id) {\n        setError('User ID is not available');\n        setLoadingGroups(false);\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:7777/groups?userId=${user.id}`);\n        setGroups(response.data);\n      } catch (error) {\n        console.error('Error fetching groups:', error);\n        setError('Error fetching groups');\n      } finally {\n        setLoadingGroups(false);\n      }\n    };\n    fetchGroups();\n  }, [user]);\n\n  // Fetch group details when a group is selected\n  useEffect(() => {\n    const fetchGroupDetails = async () => {\n      if (!selectedGroup) return;\n      setLoadingDetails(true);\n      try {\n        const response = await axios.get(`http://localhost:7777/gdetails?id=${selectedGroup.id}`);\n        setGroupDetails(response.data);\n\n        // Fetch keywords for removal\n        setKeywordsToRemove(response.data.keywords || []);\n\n        // Fetch keyword data\n        const keywordResponse = await axios.get(`http://localhost:7777/keywordchart`, {\n          params: {\n            groupId: selectedGroup.group_id,\n            userId: user.id\n          }\n        });\n        setKeywordData(keywordResponse.data);\n\n        // Fetch user count data\n        const userCountResponse = await axios.get(`http://localhost:7777/userCounts?groupId=${selectedGroup.group_id}`);\n        console.log('User Count Response:', userCountResponse.data); // Log to check data\n        setUserCountData(userCountResponse.data);\n      } catch (error) {\n        console.error('Error fetching group details:', error);\n        setError('Error fetching group details');\n      } finally {\n        setLoadingDetails(false);\n      }\n    };\n    fetchGroupDetails();\n  }, [selectedGroup, user.id]);\n  const handleAddKeyword = async () => {\n    if (!newKeyword.trim()) {\n      setError(\"Keyword cannot be empty\");\n      return;\n    }\n    try {\n      // Add keyword to the database\n      await axios.post(`http://localhost:7777/addKeyword`, {\n        groupId: selectedGroup.group_id,\n        keyword: newKeyword.trim()\n      });\n\n      // After adding the keyword, fetch updated keyword data from the backend\n      const keywordResponse = await axios.get(`http://localhost:7777/keywordchart`, {\n        params: {\n          groupId: selectedGroup.group_id,\n          userId: user.id\n        }\n      });\n      setKeywordData(keywordResponse.data);\n\n      // Clear the newKeyword input\n      setNewKeyword('');\n      // Close the modal\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error('Error adding keyword:', error);\n      setError('Error adding keyword');\n    }\n  };\n  const handleRemoveKeyword = async () => {\n    if (!selectedKeyword) {\n      setError(\"No keyword selected\");\n      return;\n    }\n    try {\n      // Remove keyword from the database\n      await axios.post(`http://localhost:7777/removeKeyword`, {\n        groupId: selectedGroup.group_id,\n        keyword: selectedKeyword\n      });\n\n      // After removing the keyword, fetch updated keyword data from the backend\n      const keywordResponse = await axios.get(`http://localhost:7777/keywordchart`, {\n        params: {\n          groupId: selectedGroup.group_id,\n          userId: user.id\n        }\n      });\n      setKeywordData(keywordResponse.data);\n\n      // Clear the selected keyword\n      setSelectedKeyword('');\n      // Close the modal\n      setRemoveModalOpen(false);\n    } catch (error) {\n      console.error('Error removing keyword:', error);\n      setError('Error removing keyword');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 bg-gray-800 p-4 h-screen sticky top-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-white text-lg font-bold\",\n          children: \"Your Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), loadingGroups ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: \"Loading groups...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2 mt-4\",\n          children: memoizedGroups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setSelectedGroup(group),\n            className: `cursor-pointer p-2 rounded-lg ${(selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.id) === group.id ? 'bg-blue-500 text-white' : 'bg-gray-700 text-gray-300'}`,\n            children: group.group_name\n          }, group.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/4 bg-white p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n              children: \"Alert System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-500 text-white px-4 py-2 rounded\",\n              children: \"Invite Bot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-red-500 text-white px-4 py-2 rounded\",\n              children: \"Remove Bot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-purple-500 text-white px-4 py-2 rounded\",\n              children: \"Sentiment Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-800\",\n            children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: (user === null || user === void 0 ? void 0 : user.name) || 'User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: logout,\n              className: \"ml-4 text-red-500\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), loadingDetails ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading group details...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this) : groupDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold mb-4\",\n            children: [groupDetails.group_name, \" - Analytics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(KeywordChart, {\n            groupId: selectedGroup.group_id,\n            userId: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mt-6\",\n            children: [\"Total Messages: \", totalMessages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-bold\",\n              children: \"Add Keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newKeyword,\n              onChange: e => setNewKeyword(e.target.value),\n              placeholder: \"Enter new keyword\",\n              className: \"border p-2 mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddKeyword,\n              className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsModalOpen(false),\n              className: \"bg-gray-300 px-4 py-2 rounded\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), removeModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-bold\",\n              children: \"Remove Keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setSelectedKeyword(e.target.value),\n              className: \"border p-2 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a keyword to remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), keywordsToRemove.map((keyword, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: keyword,\n                children: keyword\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRemoveKeyword,\n              className: \"bg-red-500 text-white px-4 py-2 rounded\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setRemoveModalOpen(false),\n              className: \"bg-gray-300 px-4 py-2 rounded\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-bold\",\n              children: \"User Count Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table-auto border-collapse border border-gray-200 w-full mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300\",\n                    children: \"User\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border border-gray-300\",\n                    children: \"Count\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: userCountData.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"border border-gray-300\",\n                    children: user.sender_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"border border-gray-300\",\n                    children: user.count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No group selected. Please select a group to view analytics.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Xgca9FsdD+05KW1QoovOVbsUdgg=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useAuth","KeywordChart","Layout","jsxDEV","_jsxDEV","Dashboard","_s","user","logout","selectedGroup","setSelectedGroup","groups","setGroups","groupDetails","setGroupDetails","loadingGroups","setLoadingGroups","loadingDetails","setLoadingDetails","keywordData","setKeywordData","userCountData","setUserCountData","error","setError","isModalOpen","setIsModalOpen","newKeyword","setNewKeyword","removeModalOpen","setRemoveModalOpen","keywordsToRemove","setKeywordsToRemove","selectedKeyword","setSelectedKeyword","totalMessages","setTotalMessages","memoizedGroups","fetchTotalMessages","console","log","group_id","id","response","get","params","groupId","userId","data","fetchGroups","fetchGroupDetails","keywords","keywordResponse","userCountResponse","handleAddKeyword","trim","post","keyword","handleRemoveKeyword","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","group","onClick","group_name","name","type","value","onChange","e","target","placeholder","index","sender_name","count","_c","$RefreshReg$"],"sources":["/Users/neelansh/PROJECTS/tele_intelli/tele-intelli/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\nimport KeywordChart from './KeywordChart';\nimport Layout from './Layout'; // Import the Layout component\n\nconst Dashboard = () => {\n  const { user, logout } = useAuth();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [groups, setGroups] = useState([]);\n  const [groupDetails, setGroupDetails] = useState(null);\n  const [loadingGroups, setLoadingGroups] = useState(true);\n  const [loadingDetails, setLoadingDetails] = useState(false);\n  const [keywordData, setKeywordData] = useState([]);\n  const [userCountData, setUserCountData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newKeyword, setNewKeyword] = useState('');\n  const [removeModalOpen, setRemoveModalOpen] = useState(false);\n  const [keywordsToRemove, setKeywordsToRemove] = useState([]); // List of keywords\n  const [selectedKeyword, setSelectedKeyword] = useState('');\n  const [totalMessages, setTotalMessages] = useState(0);\n\n  const memoizedGroups = useMemo(() => groups, [groups]);\n\n  useEffect(() => {\n    const fetchTotalMessages = async () => {\n      if (!selectedGroup || !user) {\n        return;\n      }\n\n      console.log(\"Fetching total messages for groupId:\", selectedGroup.group_id, \"and userId:\", user.id); // Log the values\n\n      try {\n        const response = await axios.get('http://localhost:7777/totalMessages', {\n          params: { groupId: selectedGroup.group_id, userId: user.id }\n        });\n\n        console.log(\"Total messages response:\", response.data); // Log the response\n        setTotalMessages(response.data.totalMessages);\n      } catch (error) {\n        console.error(\"Error fetching total messages:\", error);\n      }\n    };\n\n    fetchTotalMessages();\n  }, [selectedGroup, user]);\n\n  // Fetch user's groups\n  useEffect(() => {\n    const fetchGroups = async () => {\n      if (!user || !user.id) {\n        setError('User ID is not available');\n        setLoadingGroups(false);\n        return;\n      }\n\n      try {\n        const response = await axios.get(`http://localhost:7777/groups?userId=${user.id}`);\n        setGroups(response.data);\n      } catch (error) {\n        console.error('Error fetching groups:', error);\n        setError('Error fetching groups');\n      } finally {\n        setLoadingGroups(false);\n      }\n    };\n    fetchGroups();\n  }, [user]);\n\n  // Fetch group details when a group is selected\n  useEffect(() => {\n    const fetchGroupDetails = async () => {\n      if (!selectedGroup) return;\n\n      setLoadingDetails(true);\n      try {\n        const response = await axios.get(`http://localhost:7777/gdetails?id=${selectedGroup.id}`);\n        setGroupDetails(response.data);\n\n        // Fetch keywords for removal\n        setKeywordsToRemove(response.data.keywords || []);\n\n        // Fetch keyword data\n        const keywordResponse = await axios.get(`http://localhost:7777/keywordchart`, {\n          params: { groupId: selectedGroup.group_id, userId: user.id }\n        });\n        setKeywordData(keywordResponse.data);\n        \n        // Fetch user count data\n        const userCountResponse = await axios.get(`http://localhost:7777/userCounts?groupId=${selectedGroup.group_id}`);\n        console.log('User Count Response:', userCountResponse.data); // Log to check data\n        setUserCountData(userCountResponse.data);\n      } catch (error) {\n        console.error('Error fetching group details:', error);\n        setError('Error fetching group details');\n      } finally {\n        setLoadingDetails(false);\n      }\n    };\n\n    fetchGroupDetails();\n  }, [selectedGroup, user.id]);\n\n  const handleAddKeyword = async () => {\n    if (!newKeyword.trim()) {\n      setError(\"Keyword cannot be empty\");\n      return;\n    }\n\n    try {\n      // Add keyword to the database\n      await axios.post(`http://localhost:7777/addKeyword`, {\n        groupId: selectedGroup.group_id,\n        keyword: newKeyword.trim(),\n      });\n\n      // After adding the keyword, fetch updated keyword data from the backend\n      const keywordResponse = await axios.get(`http://localhost:7777/keywordchart`, {\n        params: { groupId: selectedGroup.group_id, userId: user.id },\n      });\n      setKeywordData(keywordResponse.data);\n\n      // Clear the newKeyword input\n      setNewKeyword('');\n      // Close the modal\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error('Error adding keyword:', error);\n      setError('Error adding keyword');\n    }\n  };\n\n  const handleRemoveKeyword = async () => {\n    if (!selectedKeyword) {\n      setError(\"No keyword selected\");\n      return;\n    }\n\n    try {\n      // Remove keyword from the database\n      await axios.post(`http://localhost:7777/removeKeyword`, {\n        groupId: selectedGroup.group_id,\n        keyword: selectedKeyword,\n      });\n\n      // After removing the keyword, fetch updated keyword data from the backend\n      const keywordResponse = await axios.get(`http://localhost:7777/keywordchart`, {\n        params: { groupId: selectedGroup.group_id, userId: user.id },\n      });\n      setKeywordData(keywordResponse.data);\n\n      // Clear the selected keyword\n      setSelectedKeyword('');\n      // Close the modal\n      setRemoveModalOpen(false);\n    } catch (error) {\n      console.error('Error removing keyword:', error);\n      setError('Error removing keyword');\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"flex h-screen\">\n        {/* Sidebar with Groups List */}\n        <div className=\"w-1/4 bg-gray-800 p-4 h-screen sticky top-0\">\n          <h3 className=\"text-white text-lg font-bold\">Your Groups</h3>\n          {loadingGroups ? (\n            <p className=\"text-gray-300\">Loading groups...</p>\n          ) : error ? (\n            <p className=\"text-red-500\">{error}</p>\n          ) : (\n            <ul className=\"space-y-2 mt-4\">\n              {memoizedGroups.map((group) => (\n                <li\n                  key={group.id}\n                  onClick={() => setSelectedGroup(group)}\n                  className={`cursor-pointer p-2 rounded-lg ${\n                    selectedGroup?.id === group.id\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-gray-700 text-gray-300'\n                  }`}\n                >\n                  {group.group_name}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n\n        {/* Main content */}\n        <div className=\"w-3/4 bg-white p-4\">\n          {/* Header with buttons */}\n          <div className=\"flex justify-between items-center mb-6\">\n            <div className=\"space-x-4\">\n              <button className=\"bg-blue-500 text-white px-4 py-2 rounded\">Alert System</button>\n              <button className=\"bg-green-500 text-white px-4 py-2 rounded\">Invite Bot</button>\n              <button className=\"bg-red-500 text-white px-4 py-2 rounded\">Remove Bot</button>\n              <button className=\"bg-purple-500 text-white px-4 py-2 rounded\">Sentiment Analysis</button>\n            </div>\n            <div className=\"text-gray-800\">\n              Welcome, <span className=\"font-bold\">{user?.name || 'User'}</span>\n              <button onClick={logout} className=\"ml-4 text-red-500\">Logout</button>\n            </div>\n          </div>\n\n          {/* Group-specific content */}\n          {loadingDetails ? (\n            <p>Loading group details...</p>\n          ) : groupDetails ? (\n            <div>\n              <h2 className=\"text-2xl font-bold mb-4\">{groupDetails.group_name} - Analytics</h2>\n              {/* Display Keyword Chart */}\n              <KeywordChart groupId={selectedGroup.group_id} userId={user.id} />\n              <h3 className=\"text-lg font-bold mt-6\">Total Messages: {totalMessages}</h3>\n              {/* Add Keywords Modal */}\n              {isModalOpen && (\n                <div className=\"modal\">\n                  <h4 className=\"font-bold\">Add Keyword</h4>\n                  <input\n                    type=\"text\"\n                    value={newKeyword}\n                    onChange={(e) => setNewKeyword(e.target.value)}\n                    placeholder=\"Enter new keyword\"\n                    className=\"border p-2 mb-4\"\n                  />\n                  <button onClick={handleAddKeyword} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Add</button>\n                  <button onClick={() => setIsModalOpen(false)} className=\"bg-gray-300 px-4 py-2 rounded\">Cancel</button>\n                </div>\n              )}\n              {/* Remove Keywords Modal */}\n              {removeModalOpen && (\n                <div className=\"modal\">\n                  <h4 className=\"font-bold\">Remove Keyword</h4>\n                  <select onChange={(e) => setSelectedKeyword(e.target.value)} className=\"border p-2 mb-4\">\n                    <option value=\"\">Select a keyword to remove</option>\n                    {keywordsToRemove.map((keyword, index) => (\n                      <option key={index} value={keyword}>{keyword}</option>\n                    ))}\n                  </select>\n                  <button onClick={handleRemoveKeyword} className=\"bg-red-500 text-white px-4 py-2 rounded\">Remove</button>\n                  <button onClick={() => setRemoveModalOpen(false)} className=\"bg-gray-300 px-4 py-2 rounded\">Cancel</button>\n                </div>\n              )}\n              {/* Display User Count Table */}\n              <div className=\"mt-6\">\n                <h4 className=\"font-bold\">User Count Data</h4>\n                <table className=\"table-auto border-collapse border border-gray-200 w-full mt-4\">\n                  <thead>\n                    <tr>\n                      <th className=\"border border-gray-300\">User</th>\n                      <th className=\"border border-gray-300\">Count</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userCountData.map((user, index) => (\n                      <tr key={index}>\n                        <td className=\"border border-gray-300\">{user.sender_name}</td>\n                        <td className=\"border border-gray-300\">{user.count}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          ) : (\n            <p>No group selected. Please select a group to view analytics.</p>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}