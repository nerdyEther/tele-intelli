{"ast":null,"code":"var _jsxFileName = \"/Users/neelansh/PROJECTS/tele_intelli/tele-intelli/client/src/components/KeywordChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale,\n// Import category scale\nLinearScale,\n// Import linear scale\nBarElement,\n// Import bar element\nTitle,\n// Optional, if you want to use a chart title\nTooltip, Legend } from 'chart.js';\n\n// Register the components that are required\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst KeywordChart = ({\n  groupId,\n  userId\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchKeywordData = async () => {\n      const response = await axios.get(`http://localhost:7777/keywordchart`, {\n        params: {\n          userId,\n          groupId\n        }\n      });\n      const data = response.data;\n      if (data.length === 0) {\n        console.warn(\"No keyword data returned.\");\n      }\n      const labels = data.map(item => item.keyword);\n      const usageCounts = data.map(item => item.count);\n      setChartData({\n        labels,\n        datasets: [{\n          label: 'Keyword Usage',\n          data: usageCounts,\n          backgroundColor: 'rgba(54, 162, 235, 0.6)'\n        }]\n      });\n    };\n    fetchKeywordData();\n  }, [groupId, userId]);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Keyword Usage Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = KeywordChart;\nexport default KeywordChart;\nvar _c;\n$RefreshReg$(_c, \"KeywordChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","KeywordChart","groupId","userId","_s","chartData","setChartData","fetchKeywordData","response","get","params","data","length","console","warn","labels","map","item","keyword","usageCounts","count","datasets","label","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/neelansh/PROJECTS/tele_intelli/tele-intelli/client/src/components/KeywordChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,     // Import category scale\n  LinearScale,      // Import linear scale\n  BarElement,       // Import bar element\n  Title,            // Optional, if you want to use a chart title\n  Tooltip,\n  Legend\n} from 'chart.js';\n\n// Register the components that are required\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst KeywordChart = ({ groupId, userId }) => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchKeywordData = async () => {\n      const response = await axios.get(`http://localhost:7777/keywordchart`, {\n        params: { userId , groupId}\n      });\n      const data = response.data;\n\n      if (data.length === 0) {\n        console.warn(\"No keyword data returned.\");\n      }\n\n      \n      const labels = data.map(item => item.keyword);\n      const usageCounts = data.map(item => item.count);\n      \n      setChartData({\n        labels,\n        datasets: [{\n          label: 'Keyword Usage',\n          data: usageCounts,\n          backgroundColor: 'rgba(54, 162, 235, 0.6)'\n        }]\n      });\n    };\n\n    fetchKeywordData();\n  }, [groupId, userId]);\n\n  if (!chartData) return <p>Loading chart...</p>;\n\n  return (\n    <div>\n      <h3 className=\"text-xl font-semibold mb-4\">Keyword Usage Chart</h3>\n      <Bar data={chartData} />\n    </div>\n  );\n};\n\nexport default KeywordChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa;AAAM;AACnBC,WAAW;AAAO;AAClBC,UAAU;AAAQ;AAClBC,KAAK;AAAa;AAClBC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMqB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,oCAAoC,EAAE;QACrEC,MAAM,EAAE;UAAEP,MAAM;UAAGD;QAAO;MAC5B,CAAC,CAAC;MACF,MAAMS,IAAI,GAAGH,QAAQ,CAACG,IAAI;MAE1B,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACrBC,OAAO,CAACC,IAAI,CAAC,2BAA2B,CAAC;MAC3C;MAGA,MAAMC,MAAM,GAAGJ,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC;MAC7C,MAAMC,WAAW,GAAGR,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,CAAC;MAEhDd,YAAY,CAAC;QACXS,MAAM;QACNM,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,eAAe;UACtBX,IAAI,EAAEQ,WAAW;UACjBI,eAAe,EAAE;QACnB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAEDhB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACL,OAAO,EAAEC,MAAM,CAAC,CAAC;EAErB,IAAI,CAACE,SAAS,EAAE,oBAAON,OAAA;IAAAyB,QAAA,EAAG;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,oBACE7B,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAI8B,SAAS,EAAC,4BAA4B;MAAAL,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnE7B,OAAA,CAACX,GAAG;MAACuB,IAAI,EAAEN;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACxB,EAAA,CAvCIH,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}